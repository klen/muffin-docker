name: build

on:
  workflow_run:
    workflows: [tests]
    branches: [master]
    types: [completed]

concurrency:
  group: build-${{ github.event.workflow_run.head_branch  }}
  cancel-in-progress: true

jobs:

  build-base:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'

    strategy:
      fail-fast: true
      matrix:
        include:

          - tag: py38
            py-version: '3.8'

          - tag: py39
            py-version: '3.9'

          - tag: py310
            py-version: '3.10'

          - tag: py311
            py-version: '3.11.3'

          - tag: latest
            py-version: '3.11.3'

    steps:

    - name: Checkout changes
      uses: actions/checkout@main

    - uses: satackey/action-docker-layer-caching@main
      continue-on-error: true

    - name: Login to docker hub
      run: make login PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and upload images
      run: make upload BUILD_IMAGE=muffin TAG=${{ matrix.tag }} PY_VERSION=${{ matrix.py-version }}

  build-node:
    runs-on: ubuntu-latest
    needs: build-base

    strategy:
      fail-fast: true
      matrix:
        tag:
        - py38
        - py39
        - py310
        - py311
        - latest

    steps:

    - name: Checkout changes
      uses: actions/checkout@main

    - uses: satackey/action-docker-layer-caching@main
      continue-on-error: true

    - name: Login to docker hub
      run: make login PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and upload images
      run: make upload BUILD_IMAGE=muffin-node TAG=${{ matrix.tag }} PY_VERSION=${{ matrix.py-version }}

  notify:
    runs-on: ubuntu-latest
    needs: build-node
    steps:

    - name: Notify Success
      uses: archive/github-actions-slack@master
      with:
          slack-channel: C2CRL4C4V
          slack-text: "*[${{ github.repository }}]* build is success *(${{ github.ref }})* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-optional-as_user: false
          slack-optional-icon_emoji: ":white_check_mark:"
